{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,SAAUF,SAASC,cAAc,WAG7BE,EAAiB,GAEvBC,gBAAkB,SAAAC,GACU,UAAtBA,EAAMC,OAAOC,OACfJ,EAAeK,MAAQC,OAAOJ,EAAMC,OAAOI,QAEnB,SAAtBL,EAAMC,OAAOC,OACfJ,EAAeQ,KAAOF,OAAOJ,EAAMC,OAAOI,QAElB,WAAtBL,EAAMC,OAAOC,OACfJ,EAAeS,OAASH,OAAOJ,EAAMC,OAAOI,O,EAgBhD,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAV,EAAUN,MAAAO,IAEpBI,EAAO,CAAEK,SAAAV,EAAUN,MAAAO,G,GAEpBA,E,IAGLC,EAAQS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MACxBmB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANtB,EAAM,M,IAExEQ,EAAQe,OAAM,SAAAL,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MACzBmB,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANtB,EAAM,M,IAIvEV,EAAKC,KAAKkC,iBAAiB,QAAS7B,iBACpCN,EAAKI,SAAS+B,iBAAiB,SAjCN,SAAAC,GACvBA,EAAEC,iBAGF,IAFA,IAAI3B,EAAQL,EAAeK,MACvBgB,EAAW,EACNY,EAAI,EAAGA,EAAIjC,EAAeS,OAAQwB,GAAK,EAG9CvB,EADAW,GAAY,EADZhB,GAASL,EAAeQ,MAGxBuB,EAAEG,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  startBtn: document.querySelector('button'),\n};\n\nconst formInputValue = {};\n\ninsudeFormInput = event => {\n  if (event.target.name === 'delay') {\n    formInputValue.delay = Number(event.target.value);\n  }\n  if (event.target.name === 'step') {\n    formInputValue.step = Number(event.target.value);\n  }\n  if (event.target.name === 'amount') {\n    formInputValue.amount = Number(event.target.value);\n  }\n};\n\nconst onClickSubmitBtn = e => {\n  e.preventDefault();\n  let delay = formInputValue.delay;\n  let position = 0;\n  for (let i = 0; i < formInputValue.amount; i += 1) {\n    delay += formInputValue.step;\n    position += 1;\n    createPromise(position, delay);\n    e.currentTarget.reset();\n  }\n};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise.then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  });\n  promise.catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n\nrefs.form.addEventListener('input', insudeFormInput);\nrefs.startBtn.addEventListener('click', onClickSubmitBtn);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","startBtn","$ce04d3a99e08e73b$var$formInputValue","insudeFormInput","event","target","name","delay","Number","value","step","amount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","i","currentTarget","reset"],"version":3,"file":"03-promises.a0aa4c8c.js.map"}